using System;
using System.Runtime.InteropServices;
using System.Threading;

class GamepadHotkey
{
    [DllImport("xinput1_4.dll")]
    public static extern int XInputGetState(int dwUserIndex, ref XInputState pState);

    [StructLayout(LayoutKind.Sequential)]
    public struct XInputState
    {
        public int dwPacketNumber;
        public XInputGamepad Gamepad;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct XInputGamepad
    {
        public ushort wButtons;
        public byte bLeftTrigger;
        public byte bRightTrigger;
        public short sThumbLX;
        public short sThumbLY;
        public short sThumbRX;
        public short sThumbRY;
    }

    public const int XINPUT_GAMEPAD_A = 0x1000;

    static void Main(string[] args)
    {
        while (true)
        {
            XInputState state = new XInputState();
            int result = XInputGetState(0, ref state); // 0 is the first controller

            if (result == 0) // Controller is connected
            {
                if ((state.Gamepad.wButtons & XINPUT_GAMEPAD_A) != 0)
                {
                    // Execute your hotkey action here
                    Console.WriteLine("Button A pressed, executing hotkey action.");
                }
            }

            Thread.Sleep(100); // Sleep to prevent high CPU usage
        }
    }
}